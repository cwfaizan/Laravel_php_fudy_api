openapi: 3.0.3
info:
  title: Fudy
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/check-account:
    post:
      summary: ''
      operationId: postApiCheckAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_no:
                  type: string
                  description: ''
                  example: '923001234567'
                account_type:
                  type: integer
                  description: ''
                  example: '1 for customer, 2 for waiter'
              required:
                - contact_no
                - account_type
      security: []
  /api/verify-pin:
    get:
      summary: ''
      operationId: getApiVerifyPin
      description: ''
      parameters:
        -
          in: query
          name: item
          description: ''
          example: 'Use for new account e.g. 923001234567'
          required: true
          schema:
            type: integer
            description: ''
            example: 'Use for new account e.g. 923001234567'
        -
          in: query
          name: user_id
          description: ''
          example: "Don't use for new account e.g. 5"
          required: true
          schema:
            type: integer
            description: ''
            example: "Don't use for new account e.g. 5"
        -
          in: query
          name: pin_type
          description: ''
          example: 2
          required: true
          schema:
            type: integer
            description: ''
            example: 2
        -
          in: query
          name: pin
          description: ''
          example: 13
          required: true
          schema:
            type: integer
            description: ''
            example: 13
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Pin Expired'
                  errors:
                    pin_message:
                      - 'Invalid Pin please try again later'
                  code: 422
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Pin Expired'
                  errors:
                    type: object
                    properties:
                      pin_message:
                        type: array
                        example:
                          - 'Invalid Pin please try again later'
                        items:
                          type: string
                  code:
                    type: integer
                    example: 422
      tags:
        - Endpoints
      security: []
  /api/signup:
    post:
      summary: ''
      operationId: postApiSignup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolor
                contact_no:
                  type: string
                  description: ''
                  example: '923001234567'
                password:
                  type: string
                  description: ''
                  example: '12345678'
                account_type:
                  type: integer
                  description: ''
                  example: '1 for customer, 2 for waiter'
                email:
                  type: string
                  description: ''
                  example: cleora.flatley@example.com
                password_confirmation:
                  type: string
                  description: ''
                  example: '12345678'
              required:
                - name
                - contact_no
                - password
                - account_type
                - email
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_no:
                  type: string
                  description: ''
                  example: '923001234567'
                password:
                  type: string
                  description: ''
                  example: '--<h_]"'
                account_type:
                  type: integer
                  description: ''
                  example: '1 for customer, 2 for waiter'
              required:
                - contact_no
                - password
                - account_type
      security: []
  /api/forgot-password:
    post:
      summary: ''
      operationId: postApiForgotPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_no:
                  type: string
                  description: ''
                  example: '923001234567'
              required:
                - contact_no
      security: []
  /api/reset-password:
    post:
      summary: ''
      operationId: postApiResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: '5'
                pin_type:
                  type: integer
                  description: ''
                  example: '7'
                password:
                  type: string
                  description: ''
                  example: '12345678'
                password_confirmation:
                  type: string
                  description: ''
                  example: '12345678'
              required:
                - user_id
                - pin_type
                - password
                - password_confirmation
      security: []
  /api/logout:
    get:
      summary: ''
      operationId: getApiLogout
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Auth token is required'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Auth token is required'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Auth token is required'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Auth token is required'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/recipes:
    get:
      summary: 'Display a list of the Recipe.'
      operationId: displayAListOfTheRecipe
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created Recipe in storage.'
      operationId: storeANewlyCreatedRecipeInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/recipes/{id}':
    get:
      summary: 'Display the specified Recipe.'
      operationId: displayTheSpecifiedRecipe
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified Recipe in storage.'
      operationId: updateTheSpecifiedRecipeInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified Recipe from storage.'
      operationId: removeTheSpecifiedRecipeFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the recipe.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
